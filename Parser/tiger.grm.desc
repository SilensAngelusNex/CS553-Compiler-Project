16 reduce/reduce conflicts
2 shift/reduce conflicts
13 rules not reduced

warning: rule <boolExp : addExp AND boolExp > will never be reduced
warning: rule <boolExp : addExp OR boolExp > will never be reduced
warning: rule <boolExp : addExp comparator addExp > will never be reduced
warning: rule <boolExp : addExp comparator LPAREN boolExp RPAREN > will never be reduced
warning: rule <boolExp : LPAREN boolExp RPAREN comparator addExp > will never be reduced
warning: rule <boolExp : LPAREN boolExp RPAREN > will never be reduced
warning: rule <boolExp : addExp > will never be reduced
warning: rule <comparator : EQ > will never be reduced
warning: rule <comparator : NEQ > will never be reduced
warning: rule <comparator : LT > will never be reduced
warning: rule <comparator : LE > will never be reduced
warning: rule <comparator : GT > will never be reduced
warning: rule <comparator : GE > will never be reduced
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on TYPE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on VAR
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on FUNCTION
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on END
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on IN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on DO
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on TO
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on ELSE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on THEN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RBRACE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RBRACK
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RPAREN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on SEMICOLON
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on COMMA
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on EOF
error:  state 21: reduce/reduce conflict between rule 68 and rule 26 on LBRACK
error:  state 43: shift/reduce conflict (shift RPAREN, reduce by rule 38)
error:  state 92: shift/reduce conflict (shift ELSE, reduce by rule 2)

state 0:

	program : . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 10
	program	goto 134
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 1:

	term : lvalue .  (reduce by rule 63)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 

	LBRACK	shift 23
	DOT	shift 22


	.	reduce by rule 63

error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on TYPE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on VAR
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on FUNCTION
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on END
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on IN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on DO
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on TO
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on ELSE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on THEN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RBRACE
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RBRACK
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on RPAREN
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on SEMICOLON
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on COMMA
error:  state 2: reduce/reduce conflict between rule 46 and rule 10 on EOF

state 2:

	exp : term .  (reduce by rule 10)
	parenExp : term .  (reduce by rule 46)

	EOF	reduce by rule 10
	COMMA	reduce by rule 10
	SEMICOLON	reduce by rule 10
	RPAREN	reduce by rule 10
	RBRACK	reduce by rule 10
	RBRACE	reduce by rule 10
	PLUS	reduce by rule 46
	MINUS	reduce by rule 46
	TIMES	reduce by rule 46
	DIVIDE	reduce by rule 46
	THEN	reduce by rule 10
	ELSE	reduce by rule 10
	TO	reduce by rule 10
	DO	reduce by rule 10
	IN	reduce by rule 10
	END	reduce by rule 10
	FUNCTION	reduce by rule 10
	VAR	reduce by rule 10
	TYPE	reduce by rule 10


	.	error


state 3:

	multExp : parenExp . DIVIDE multExp 
	multExp : parenExp . TIMES multExp 
	multExp : parenExp .  (reduce by rule 44)

	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 44


state 4:

	addExp : multExp . PLUS addExp 
	addExp : multExp . MINUS addExp 
	addExp : multExp .  (reduce by rule 41)

	PLUS	shift 27
	MINUS	shift 26


	.	reduce by rule 41


state 5:

	exp : addExp .  (reduce by rule 9)



	.	reduce by rule 9


state 6:

	exp : function .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : record .  (reduce by rule 5)



	.	reduce by rule 5


state 8:

	exp : typeDef . LBRACK exp RBRACK OF exp 

	LBRACK	shift 28


	.	error


state 9:

	exp : let .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	program : exp .  (reduce by rule 0)



	.	reduce by rule 0


state 11:

	term : BREAK .  (reduce by rule 65)



	.	reduce by rule 65


state 12:

	let : LET . dec IN sequence END 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	dec	goto 32
	varDec	goto 31
	typeDec	goto 30
	funcDec	goto 29

	.	reduce by rule 16


state 13:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 36


	.	error


state 14:

	exp : WHILE . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 37
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 15:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 38
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 16:

	term : MINUS . INT 

	INT	shift 39


	.	error


state 17:

	typeDef : LBRACE . argDef RBRACE 

	ID	shift 41

	argDef	goto 40

	.	error


state 18:

	exp : LPAREN . sequence RPAREN 
	parenExp : LPAREN . exp RPAREN 
	term : LPAREN . RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	RPAREN	shift 44
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 43
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	sequence	goto 42
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 19:

	term : STRING .  (reduce by rule 62)



	.	reduce by rule 62


state 20:

	term : INT .  (reduce by rule 60)



	.	reduce by rule 60

error:  state 21: reduce/reduce conflict between rule 68 and rule 26 on LBRACK

state 21:

	typeDef : ID . OF typeDef 
	typeDef : ID .  (reduce by rule 26)
	record : ID . LBRACE RBRACE 
	record : ID . LBRACE recArgs RBRACE 
	function : ID . LPAREN RPAREN 
	function : ID . LPAREN args RPAREN 
	lvalue : ID .  (reduce by rule 68)

	EOF	reduce by rule 68
	COMMA	reduce by rule 68
	SEMICOLON	reduce by rule 68
	LPAREN	shift 47
	RPAREN	reduce by rule 68
	LBRACK	reduce by rule 26
	RBRACK	reduce by rule 68
	LBRACE	shift 46
	RBRACE	reduce by rule 68
	DOT	reduce by rule 68
	PLUS	reduce by rule 68
	MINUS	reduce by rule 68
	TIMES	reduce by rule 68
	DIVIDE	reduce by rule 68
	THEN	reduce by rule 68
	ELSE	reduce by rule 68
	TO	reduce by rule 68
	DO	reduce by rule 68
	IN	reduce by rule 68
	END	reduce by rule 68
	OF	shift 45
	FUNCTION	reduce by rule 68
	VAR	reduce by rule 68
	TYPE	reduce by rule 68


	.	error


state 22:

	lvalue : lvalue DOT . ID 

	ID	shift 48


	.	error


state 23:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 49
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 24:

	multExp : parenExp DIVIDE . multExp 

	ID	shift 53
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 52
	MINUS	shift 16
	BREAK	shift 11

	multExp	goto 51
	parenExp	goto 3
	term	goto 50
	lvalue	goto 1

	.	error


state 25:

	multExp : parenExp TIMES . multExp 

	ID	shift 53
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 52
	MINUS	shift 16
	BREAK	shift 11

	multExp	goto 54
	parenExp	goto 3
	term	goto 50
	lvalue	goto 1

	.	error


state 26:

	addExp : multExp MINUS . addExp 

	ID	shift 53
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 52
	MINUS	shift 16
	BREAK	shift 11

	addExp	goto 55
	multExp	goto 4
	parenExp	goto 3
	term	goto 50
	lvalue	goto 1

	.	error


state 27:

	addExp : multExp PLUS . addExp 

	ID	shift 53
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 52
	MINUS	shift 16
	BREAK	shift 11

	addExp	goto 56
	multExp	goto 4
	parenExp	goto 3
	term	goto 50
	lvalue	goto 1

	.	error


state 28:

	exp : typeDef LBRACK . exp RBRACK OF exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 57
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 29:

	dec : funcDec . dec 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	dec	goto 58
	varDec	goto 31
	typeDec	goto 30
	funcDec	goto 29

	.	reduce by rule 16


state 30:

	dec : typeDec . dec 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	dec	goto 59
	varDec	goto 31
	typeDec	goto 30
	funcDec	goto 29

	.	reduce by rule 16


state 31:

	dec : varDec . dec 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	dec	goto 60
	varDec	goto 31
	typeDec	goto 30
	funcDec	goto 29

	.	reduce by rule 16


state 32:

	let : LET dec . IN sequence END 

	IN	shift 61


	.	error


state 33:

	typeDec : TYPE . ID EQ typeDef 

	ID	shift 62


	.	error


state 34:

	varDec : VAR . ID ASSIGN exp 
	varDec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 63


	.	error


state 35:

	funcDec : FUNCTION . ID LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 64


	.	error


state 36:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 65


	.	error


state 37:

	exp : WHILE exp . DO exp 

	DO	shift 66


	.	error


state 38:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	THEN	shift 67


	.	error


state 39:

	term : MINUS INT .  (reduce by rule 61)



	.	reduce by rule 61


state 40:

	typeDef : LBRACE argDef . RBRACE 

	RBRACE	shift 68


	.	error


state 41:

	argDef : ID . COLON typeDef COMMA argDef 
	argDef : ID . COLON typeDef 

	COLON	shift 69


	.	error


state 42:

	exp : LPAREN sequence . RPAREN 

	RPAREN	shift 70


	.	error

error:  state 43: shift/reduce conflict (shift RPAREN, reduce by rule 38)

state 43:

	sequence : exp . SEMICOLON sequence 
	sequence : exp .  (reduce by rule 38)
	parenExp : LPAREN exp . RPAREN 

	SEMICOLON	shift 72
	RPAREN	shift 71


	.	error


state 44:

	term : LPAREN RPAREN .  (reduce by rule 64)



	.	reduce by rule 64


state 45:

	typeDef : ID OF . typeDef 

	ID	shift 74
	LBRACE	shift 17

	typeDef	goto 73

	.	error


state 46:

	record : ID LBRACE . RBRACE 
	record : ID LBRACE . recArgs RBRACE 

	ID	shift 77
	RBRACE	shift 76

	recArgs	goto 75

	.	error


state 47:

	function : ID LPAREN . RPAREN 
	function : ID LPAREN . args RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	RPAREN	shift 80
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 79
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	args	goto 78
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 48:

	lvalue : lvalue DOT ID .  (reduce by rule 67)



	.	reduce by rule 67


state 49:

	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 81


	.	error


state 50:

	parenExp : term .  (reduce by rule 46)



	.	reduce by rule 46


state 51:

	multExp : parenExp DIVIDE multExp .  (reduce by rule 42)



	.	reduce by rule 42


state 52:

	parenExp : LPAREN . exp RPAREN 
	term : LPAREN . RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	RPAREN	shift 44
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 82
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 53:

	lvalue : ID .  (reduce by rule 68)



	.	reduce by rule 68


state 54:

	multExp : parenExp TIMES multExp .  (reduce by rule 43)



	.	reduce by rule 43


state 55:

	addExp : multExp MINUS addExp .  (reduce by rule 40)



	.	reduce by rule 40


state 56:

	addExp : multExp PLUS addExp .  (reduce by rule 39)



	.	reduce by rule 39


state 57:

	exp : typeDef LBRACK exp . RBRACK OF exp 

	RBRACK	shift 83


	.	error


state 58:

	dec : funcDec dec .  (reduce by rule 15)



	.	reduce by rule 15


state 59:

	dec : typeDec dec .  (reduce by rule 14)



	.	reduce by rule 14


state 60:

	dec : varDec dec .  (reduce by rule 13)



	.	reduce by rule 13


state 61:

	let : LET dec IN . sequence END 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 85
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	sequence	goto 84
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 62:

	typeDec : TYPE ID . EQ typeDef 

	EQ	shift 86


	.	error


state 63:

	varDec : VAR ID . ASSIGN exp 
	varDec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 64:

	funcDec : FUNCTION ID . LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 89


	.	error


state 65:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 90
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 66:

	exp : WHILE exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 91
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 67:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 92
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 68:

	typeDef : LBRACE argDef RBRACE .  (reduce by rule 24)



	.	reduce by rule 24


state 69:

	argDef : ID COLON . typeDef COMMA argDef 
	argDef : ID COLON . typeDef 

	ID	shift 74
	LBRACE	shift 17

	typeDef	goto 93

	.	error


state 70:

	exp : LPAREN sequence RPAREN .  (reduce by rule 6)



	.	reduce by rule 6


state 71:

	parenExp : LPAREN exp RPAREN .  (reduce by rule 45)



	.	reduce by rule 45


state 72:

	sequence : exp SEMICOLON . sequence 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 85
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	sequence	goto 94
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 73:

	typeDef : ID OF typeDef .  (reduce by rule 25)



	.	reduce by rule 25


state 74:

	typeDef : ID . OF typeDef 
	typeDef : ID .  (reduce by rule 26)

	OF	shift 45


	.	reduce by rule 26


state 75:

	record : ID LBRACE recArgs . RBRACE 

	RBRACE	shift 95


	.	error


state 76:

	record : ID LBRACE RBRACE .  (reduce by rule 29)



	.	reduce by rule 29


state 77:

	recArgs : ID . EQ exp COMMA recArgs 
	recArgs : ID . EQ exp 

	EQ	shift 96


	.	error


state 78:

	function : ID LPAREN args . RPAREN 

	RPAREN	shift 97


	.	error


state 79:

	args : exp . COMMA args 
	args : exp .  (reduce by rule 36)

	COMMA	shift 98


	.	reduce by rule 36


state 80:

	function : ID LPAREN RPAREN .  (reduce by rule 33)



	.	reduce by rule 33


state 81:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 66)



	.	reduce by rule 66


state 82:

	parenExp : LPAREN exp . RPAREN 

	RPAREN	shift 71


	.	error


state 83:

	exp : typeDef LBRACK exp RBRACK . OF exp 

	OF	shift 99


	.	error


state 84:

	let : LET dec IN sequence . END 

	END	shift 100


	.	error


state 85:

	sequence : exp . SEMICOLON sequence 
	sequence : exp .  (reduce by rule 38)

	SEMICOLON	shift 72


	.	reduce by rule 38


state 86:

	typeDec : TYPE ID EQ . typeDef 

	ID	shift 74
	LBRACE	shift 17

	typeDef	goto 101

	.	error


state 87:

	varDec : VAR ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 102
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 88:

	varDec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 89:

	funcDec : FUNCTION ID LPAREN . argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . argDef RPAREN EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 41
	RPAREN	shift 105

	argDef	goto 104

	.	error


state 90:

	exp : FOR ID ASSIGN exp . TO exp DO exp 

	TO	shift 106


	.	error


state 91:

	exp : WHILE exp DO exp .  (reduce by rule 3)



	.	reduce by rule 3

error:  state 92: shift/reduce conflict (shift ELSE, reduce by rule 2)

state 92:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 2)

	ELSE	shift 107


	.	reduce by rule 2


state 93:

	argDef : ID COLON typeDef . COMMA argDef 
	argDef : ID COLON typeDef .  (reduce by rule 28)

	COMMA	shift 108


	.	reduce by rule 28


state 94:

	sequence : exp SEMICOLON sequence .  (reduce by rule 37)



	.	reduce by rule 37


state 95:

	record : ID LBRACE recArgs RBRACE .  (reduce by rule 30)



	.	reduce by rule 30


state 96:

	recArgs : ID EQ . exp COMMA recArgs 
	recArgs : ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 109
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 97:

	function : ID LPAREN args RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 98:

	args : exp COMMA . args 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 79
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	args	goto 110
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 99:

	exp : typeDef LBRACK exp RBRACK OF . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 111
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 100:

	let : LET dec IN sequence END .  (reduce by rule 12)



	.	reduce by rule 12


state 101:

	typeDec : TYPE ID EQ typeDef .  (reduce by rule 19)



	.	reduce by rule 19


state 102:

	varDec : VAR ID ASSIGN exp .  (reduce by rule 17)



	.	reduce by rule 17


state 103:

	varDec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 112


	.	error


state 104:

	funcDec : FUNCTION ID LPAREN argDef . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef . RPAREN EQ exp 

	RPAREN	shift 113


	.	error


state 105:

	funcDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 115
	EQ	shift 114


	.	error


state 106:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 116
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 107:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 117
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 108:

	argDef : ID COLON typeDef COMMA . argDef 

	ID	shift 41

	argDef	goto 118

	.	error


state 109:

	recArgs : ID EQ exp . COMMA recArgs 
	recArgs : ID EQ exp .  (reduce by rule 32)

	COMMA	shift 119


	.	reduce by rule 32


state 110:

	args : exp COMMA args .  (reduce by rule 35)



	.	reduce by rule 35


state 111:

	exp : typeDef LBRACK exp RBRACK OF exp .  (reduce by rule 11)



	.	reduce by rule 11


state 112:

	varDec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 120
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 113:

	funcDec : FUNCTION ID LPAREN argDef RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef RPAREN . EQ exp 

	COLON	shift 122
	EQ	shift 121


	.	error


state 114:

	funcDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 123
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 115:

	funcDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 124


	.	error


state 116:

	exp : FOR ID ASSIGN exp TO exp . DO exp 

	DO	shift 125


	.	error


state 117:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 1)



	.	reduce by rule 1


state 118:

	argDef : ID COLON typeDef COMMA argDef .  (reduce by rule 27)



	.	reduce by rule 27


state 119:

	recArgs : ID EQ exp COMMA . recArgs 

	ID	shift 77

	recArgs	goto 126

	.	error


state 120:

	varDec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 18)



	.	reduce by rule 18


state 121:

	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 127
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 122:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON . ID EQ exp 

	ID	shift 128


	.	error


state 123:

	funcDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 23)



	.	reduce by rule 23


state 124:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 129


	.	error


state 125:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 130
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 126:

	recArgs : ID EQ exp COMMA recArgs .  (reduce by rule 31)



	.	reduce by rule 31


state 127:

	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ exp .  (reduce by rule 22)



	.	reduce by rule 22


state 128:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID . EQ exp 

	EQ	shift 131


	.	error


state 129:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 132
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 130:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 4)



	.	reduce by rule 4


state 131:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	LBRACE	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11

	exp	goto 133
	let	goto 9
	typeDef	goto 8
	record	goto 7
	function	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 132:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 21)



	.	reduce by rule 21


state 133:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ exp .  (reduce by rule 20)



	.	reduce by rule 20


state 134:


	EOF	accept


	.	error

149 of 559 action table entries left after compaction
298 goto table entries
