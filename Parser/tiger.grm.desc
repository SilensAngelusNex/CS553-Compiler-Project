2 shift/reduce conflicts

error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 66)
error:  state 39: shift/reduce conflict (shift FUNCTION, reduce by rule 64)

state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 189
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 1:

	exp : assignExp .  (reduce by rule 20)



	.	reduce by rule 20


state 2:

	exp : callExp .  (reduce by rule 19)



	.	reduce by rule 19


state 3:

	exp : recCreate .  (reduce by rule 21)



	.	reduce by rule 21


state 4:

	exp : arrCreate .  (reduce by rule 22)



	.	reduce by rule 22


state 5:

	exp : letExp .  (reduce by rule 15)



	.	reduce by rule 15


state 6:

	exp : forExp .  (reduce by rule 16)



	.	reduce by rule 16


state 7:

	exp : whileExp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : ifExp .  (reduce by rule 14)



	.	reduce by rule 14


state 9:

	exp : lvalue .  (reduce by rule 27)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	arrCreate : lvalue . LBRACK exp RBRACK OF exp 
	assignExp : lvalue . ASSIGN exp 

	LBRACK	shift 25
	DOT	shift 24
	ASSIGN	shift 23


	.	reduce by rule 27


state 10:

	exp : seqExp .  (reduce by rule 18)



	.	reduce by rule 18


state 11:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 25)



	.	reduce by rule 25


state 13:

	exp : BREAK .  (reduce by rule 26)



	.	reduce by rule 26


state 14:

	letExp : LET . varDec dec seqExp END 
	letExp : LET . funDecs dec seqExp END 
	letExp : LET . typDecs dec seqExp END 
	letExp : LET . IN seqExp END 

	IN	shift 46
	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	typDecs	goto 42
	funDecs	goto 41
	varDec	goto 40
	funDec	goto 39
	typeDec	goto 38

	.	error


state 15:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 47


	.	error


state 16:

	whileExp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 48
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 17:

	ifExp : IF . exp THEN exp 
	ifExp : IF . exp THEN exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 18:

	exp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 50
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 19:

	seqExp : LPAREN . exp sequence 
	seqExp : LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 52
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 51
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 20:

	exp : STRING .  (reduce by rule 24)



	.	reduce by rule 24


state 21:

	exp : INT .  (reduce by rule 23)



	.	reduce by rule 23


state 22:

	lvalue : ID .  (reduce by rule 82)
	recCreate : ID . LBRACE ID EQ exp fields 
	recCreate : ID . LBRACE RBRACE 
	callExp : ID . LPAREN exp params 
	callExp : ID . LPAREN RPAREN 

	LPAREN	shift 54
	LBRACE	shift 53


	.	reduce by rule 82


state 23:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 55
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 24:

	lvalue : lvalue DOT . ID 

	ID	shift 56


	.	error


state 25:

	lvalue : lvalue LBRACK . exp RBRACK 
	arrCreate : lvalue LBRACK . exp RBRACK OF exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 57
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 26:

	exp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 58
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 27:

	exp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 59
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 28:

	exp : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 60
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 29:

	exp : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 61
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 30:

	exp : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 31:

	exp : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 32:

	exp : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 33:

	exp : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 34:

	exp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 35:

	exp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 36:

	exp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 68
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 37:

	exp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 69
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error

error:  state 38: shift/reduce conflict (shift TYPE, reduce by rule 66)

state 38:

	typDecs : typeDec . typDecs 
	typDecs : typeDec .  (reduce by rule 66)

	TYPE	shift 43

	typDecs	goto 70
	typeDec	goto 38

	.	reduce by rule 66

error:  state 39: shift/reduce conflict (shift FUNCTION, reduce by rule 64)

state 39:

	funDecs : funDec . funDecs 
	funDecs : funDec .  (reduce by rule 64)

	FUNCTION	shift 45

	funDecs	goto 71
	funDec	goto 39

	.	reduce by rule 64


state 40:

	letExp : LET varDec . dec seqExp END 

	IN	shift 76
	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 75
	typDecs	goto 74
	funDecs	goto 73
	varDec	goto 72
	funDec	goto 39
	typeDec	goto 38

	.	error


state 41:

	letExp : LET funDecs . dec seqExp END 

	IN	shift 76
	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 77
	typDecs	goto 74
	funDecs	goto 73
	varDec	goto 72
	funDec	goto 39
	typeDec	goto 38

	.	error


state 42:

	letExp : LET typDecs . dec seqExp END 

	IN	shift 76
	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 78
	typDecs	goto 74
	funDecs	goto 73
	varDec	goto 72
	funDec	goto 39
	typeDec	goto 38

	.	error


state 43:

	typeDec : TYPE . ID EQ ty 

	ID	shift 79


	.	error


state 44:

	varDec : VAR . ID ASSIGN exp 
	varDec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 80


	.	error


state 45:

	funDec : FUNCTION . ID LPAREN ID COLON ID argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN ID COLON ID argDef RPAREN EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 81


	.	error


state 46:

	letExp : LET IN . seqExp END 

	LPAREN	shift 19

	seqExp	goto 82

	.	error


state 47:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 83


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	DO	shift 84


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp . THEN exp 
	ifExp : IF exp . THEN exp ELSE exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	THEN	shift 85


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : MINUS exp .  (reduce by rule 13)



	.	reduce by rule 13


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	seqExp : LPAREN exp . sequence 

	SEMICOLON	shift 88
	RPAREN	shift 87
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	sequence	goto 86

	.	error


state 52:

	seqExp : LPAREN RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 53:

	recCreate : ID LBRACE . ID EQ exp fields 
	recCreate : ID LBRACE . RBRACE 

	ID	shift 90
	RBRACE	shift 89


	.	error


state 54:

	callExp : ID LPAREN . exp params 
	callExp : ID LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 92
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 91
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 40)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 40


state 56:

	lvalue : lvalue DOT ID .  (reduce by rule 81)



	.	reduce by rule 81


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 
	arrCreate : lvalue LBRACK exp . RBRACK OF exp 

	RBRACK	shift 93
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 12)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27


	.	reduce by rule 12


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 11)
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28


	.	reduce by rule 11


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 8)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 8


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 7)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 7


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 10)
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 10


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 9)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 9


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 6)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 6


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 5)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 5


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 3)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 3


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 4)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 4


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 2)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 2


state 69:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 1)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 1


state 70:

	typDecs : typeDec typDecs .  (reduce by rule 65)



	.	reduce by rule 65


state 71:

	funDecs : funDec funDecs .  (reduce by rule 63)



	.	reduce by rule 63


state 72:

	dec : varDec . dec1 

	IN	shift 97
	FUNCTION	shift 45
	TYPE	shift 43

	dec1	goto 96
	typDecs	goto 95
	funDecs	goto 94
	funDec	goto 39
	typeDec	goto 38

	.	error


state 73:

	dec : funDecs . dec2 

	IN	shift 101
	VAR	shift 44
	TYPE	shift 43

	dec2	goto 100
	typDecs	goto 99
	varDec	goto 98
	typeDec	goto 38

	.	error


state 74:

	dec : typDecs . dec3 

	IN	shift 105
	FUNCTION	shift 45
	VAR	shift 44

	dec3	goto 104
	funDecs	goto 103
	varDec	goto 102
	funDec	goto 39

	.	error


state 75:

	letExp : LET varDec dec . seqExp END 

	LPAREN	shift 19

	seqExp	goto 106

	.	error


state 76:

	dec : IN .  (reduce by rule 53)



	.	reduce by rule 53


state 77:

	letExp : LET funDecs dec . seqExp END 

	LPAREN	shift 19

	seqExp	goto 107

	.	error


state 78:

	letExp : LET typDecs dec . seqExp END 

	LPAREN	shift 19

	seqExp	goto 108

	.	error


state 79:

	typeDec : TYPE ID . EQ ty 

	EQ	shift 109


	.	error


state 80:

	varDec : VAR ID . ASSIGN exp 
	varDec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 111
	ASSIGN	shift 110


	.	error


state 81:

	funDec : FUNCTION ID . LPAREN ID COLON ID argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN ID COLON ID argDef RPAREN EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 112


	.	error


state 82:

	letExp : LET IN seqExp . END 

	END	shift 113


	.	error


state 83:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 114
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 84:

	whileExp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 115
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 85:

	ifExp : IF exp THEN . exp 
	ifExp : IF exp THEN . exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 116
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 86:

	seqExp : LPAREN exp sequence .  (reduce by rule 41)



	.	reduce by rule 41


state 87:

	sequence : RPAREN .  (reduce by rule 44)



	.	reduce by rule 44


state 88:

	sequence : SEMICOLON . exp sequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 117
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 89:

	recCreate : ID LBRACE RBRACE .  (reduce by rule 47)



	.	reduce by rule 47


state 90:

	recCreate : ID LBRACE ID . EQ exp fields 

	EQ	shift 118


	.	error


state 91:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	callExp : ID LPAREN exp . params 

	COMMA	shift 121
	RPAREN	shift 120
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	params	goto 119

	.	error


state 92:

	callExp : ID LPAREN RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 93:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 80)
	arrCreate : lvalue LBRACK exp RBRACK . OF exp 

	OF	shift 122


	.	reduce by rule 80


state 94:

	dec1 : funDecs . dec2 

	IN	shift 101
	VAR	shift 44
	TYPE	shift 43

	dec2	goto 123
	typDecs	goto 99
	varDec	goto 98
	typeDec	goto 38

	.	error


state 95:

	dec1 : typDecs . dec3 

	IN	shift 105
	FUNCTION	shift 45
	VAR	shift 44

	dec3	goto 124
	funDecs	goto 103
	varDec	goto 102
	funDec	goto 39

	.	error


state 96:

	dec : varDec dec1 .  (reduce by rule 50)



	.	reduce by rule 50


state 97:

	dec1 : IN .  (reduce by rule 56)



	.	reduce by rule 56


state 98:

	dec2 : varDec . dec1 

	IN	shift 97
	FUNCTION	shift 45
	TYPE	shift 43

	dec1	goto 125
	typDecs	goto 95
	funDecs	goto 94
	funDec	goto 39
	typeDec	goto 38

	.	error


state 99:

	dec2 : typDecs . dec3 

	IN	shift 105
	FUNCTION	shift 45
	VAR	shift 44

	dec3	goto 126
	funDecs	goto 103
	varDec	goto 102
	funDec	goto 39

	.	error


state 100:

	dec : funDecs dec2 .  (reduce by rule 51)



	.	reduce by rule 51


state 101:

	dec2 : IN .  (reduce by rule 59)



	.	reduce by rule 59


state 102:

	dec3 : varDec . dec1 

	IN	shift 97
	FUNCTION	shift 45
	TYPE	shift 43

	dec1	goto 127
	typDecs	goto 95
	funDecs	goto 94
	funDec	goto 39
	typeDec	goto 38

	.	error


state 103:

	dec3 : funDecs . dec2 

	IN	shift 101
	VAR	shift 44
	TYPE	shift 43

	dec2	goto 128
	typDecs	goto 99
	varDec	goto 98
	typeDec	goto 38

	.	error


state 104:

	dec : typDecs dec3 .  (reduce by rule 52)



	.	reduce by rule 52


state 105:

	dec3 : IN .  (reduce by rule 62)



	.	reduce by rule 62


state 106:

	letExp : LET varDec dec seqExp . END 

	END	shift 129


	.	error


state 107:

	letExp : LET funDecs dec seqExp . END 

	END	shift 130


	.	error


state 108:

	letExp : LET typDecs dec seqExp . END 

	END	shift 131


	.	error


state 109:

	typeDec : TYPE ID EQ . ty 

	ID	shift 135
	LBRACE	shift 134
	ARRAY	shift 133

	ty	goto 132

	.	error


state 110:

	varDec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 136
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 111:

	varDec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 137


	.	error


state 112:

	funDec : FUNCTION ID LPAREN . ID COLON ID argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . ID COLON ID argDef RPAREN EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 139
	RPAREN	shift 138


	.	error


state 113:

	letExp : LET IN seqExp END .  (reduce by rule 33)



	.	reduce by rule 33


state 114:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	TO	shift 140


	.	error


state 115:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 34)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 34


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp .  (reduce by rule 28)
	ifExp : IF exp THEN exp . ELSE exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	ELSE	shift 141


	.	reduce by rule 28


state 117:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	sequence : SEMICOLON exp . sequence 

	SEMICOLON	shift 88
	RPAREN	shift 87
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	sequence	goto 142

	.	error


state 118:

	recCreate : ID LBRACE ID EQ . exp fields 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 143
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 119:

	callExp : ID LPAREN exp params .  (reduce by rule 36)



	.	reduce by rule 36


state 120:

	params : RPAREN .  (reduce by rule 39)



	.	reduce by rule 39


state 121:

	params : COMMA . exp params 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 144
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 122:

	arrCreate : lvalue LBRACK exp RBRACK OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 145
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 123:

	dec1 : funDecs dec2 .  (reduce by rule 54)



	.	reduce by rule 54


state 124:

	dec1 : typDecs dec3 .  (reduce by rule 55)



	.	reduce by rule 55


state 125:

	dec2 : varDec dec1 .  (reduce by rule 57)



	.	reduce by rule 57


state 126:

	dec2 : typDecs dec3 .  (reduce by rule 58)



	.	reduce by rule 58


state 127:

	dec3 : varDec dec1 .  (reduce by rule 60)



	.	reduce by rule 60


state 128:

	dec3 : funDecs dec2 .  (reduce by rule 61)



	.	reduce by rule 61


state 129:

	letExp : LET varDec dec seqExp END .  (reduce by rule 30)



	.	reduce by rule 30


state 130:

	letExp : LET funDecs dec seqExp END .  (reduce by rule 31)



	.	reduce by rule 31


state 131:

	letExp : LET typDecs dec seqExp END .  (reduce by rule 32)



	.	reduce by rule 32


state 132:

	typeDec : TYPE ID EQ ty .  (reduce by rule 73)



	.	reduce by rule 73


state 133:

	ty : ARRAY . OF ID 

	OF	shift 146


	.	error


state 134:

	ty : LBRACE . ID COLON ID argDef 
	ty : LBRACE . RBRACE 

	ID	shift 148
	RBRACE	shift 147


	.	error


state 135:

	ty : ID .  (reduce by rule 74)



	.	reduce by rule 74


state 136:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID ASSIGN exp .  (reduce by rule 67)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 67


state 137:

	varDec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 149


	.	error


state 138:

	funDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 151
	EQ	shift 150


	.	error


state 139:

	funDec : FUNCTION ID LPAREN ID . COLON ID argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID . COLON ID argDef RPAREN EQ exp 

	COLON	shift 152


	.	error


state 140:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 153
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 141:

	ifExp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 154
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 142:

	sequence : SEMICOLON exp sequence .  (reduce by rule 43)



	.	reduce by rule 43


state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recCreate : ID LBRACE ID EQ exp . fields 

	COMMA	shift 157
	RBRACE	shift 156
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	fields	goto 155

	.	error


state 144:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	params : COMMA exp . params 

	COMMA	shift 121
	RPAREN	shift 120
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	params	goto 158

	.	error


state 145:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	arrCreate : lvalue LBRACK exp RBRACK OF exp .  (reduce by rule 45)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 45


state 146:

	ty : ARRAY OF . ID 

	ID	shift 159


	.	error


state 147:

	ty : LBRACE RBRACE .  (reduce by rule 77)



	.	reduce by rule 77


state 148:

	ty : LBRACE ID . COLON ID argDef 

	COLON	shift 160


	.	error


state 149:

	varDec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 161
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 150:

	funDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 162
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 151:

	funDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 163


	.	error


state 152:

	funDec : FUNCTION ID LPAREN ID COLON . ID argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON . ID argDef RPAREN EQ exp 

	ID	shift 164


	.	error


state 153:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	DO	shift 165


	.	error


state 154:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp ELSE exp .  (reduce by rule 29)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 29


state 155:

	recCreate : ID LBRACE ID EQ exp fields .  (reduce by rule 46)



	.	reduce by rule 46


state 156:

	fields : RBRACE .  (reduce by rule 49)



	.	reduce by rule 49


state 157:

	fields : COMMA . ID EQ exp fields 

	ID	shift 166


	.	error


state 158:

	params : COMMA exp params .  (reduce by rule 38)



	.	reduce by rule 38


state 159:

	ty : ARRAY OF ID .  (reduce by rule 75)



	.	reduce by rule 75


state 160:

	ty : LBRACE ID COLON . ID argDef 

	ID	shift 167


	.	error


state 161:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 68)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 68


state 162:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 72)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 72


state 163:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 168


	.	error


state 164:

	funDec : FUNCTION ID LPAREN ID COLON ID . argDef RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON ID . argDef RPAREN EQ exp 

	COMMA	shift 171
	RBRACE	shift 170

	argDef	goto 169

	.	error


state 165:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 172
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 166:

	fields : COMMA ID . EQ exp fields 

	EQ	shift 173


	.	error


state 167:

	ty : LBRACE ID COLON ID . argDef 

	COMMA	shift 171
	RBRACE	shift 170

	argDef	goto 174

	.	error


state 168:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 175
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 169:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef . RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDef . RPAREN EQ exp 

	RPAREN	shift 176


	.	error


state 170:

	argDef : RBRACE .  (reduce by rule 79)



	.	reduce by rule 79


state 171:

	argDef : COMMA . ID COLON ID argDef 

	ID	shift 177


	.	error


state 172:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 35)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 35


state 173:

	fields : COMMA ID EQ . exp fields 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 178
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 174:

	ty : LBRACE ID COLON ID argDef .  (reduce by rule 76)



	.	reduce by rule 76


state 175:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 70)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 70


state 176:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN . EQ exp 

	COLON	shift 180
	EQ	shift 179


	.	error


state 177:

	argDef : COMMA ID . COLON ID argDef 

	COLON	shift 181


	.	error


state 178:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fields : COMMA ID EQ exp . fields 

	COMMA	shift 157
	RBRACE	shift 156
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	fields	goto 182

	.	error


state 179:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 183
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 180:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN COLON . ID EQ exp 

	ID	shift 184


	.	error


state 181:

	argDef : COMMA ID COLON . ID argDef 

	ID	shift 185


	.	error


state 182:

	fields : COMMA ID EQ exp fields .  (reduce by rule 48)



	.	reduce by rule 48


state 183:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN EQ exp .  (reduce by rule 71)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 71


state 184:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN COLON ID . EQ exp 

	EQ	shift 186


	.	error


state 185:

	argDef : COMMA ID COLON ID . argDef 

	COMMA	shift 171
	RBRACE	shift 170

	argDef	goto 187

	.	error


state 186:

	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 188
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 187:

	argDef : COMMA ID COLON ID argDef .  (reduce by rule 78)



	.	reduce by rule 78


state 188:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDef RPAREN COLON ID EQ exp .  (reduce by rule 69)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 69


state 189:


	EOF	accept


	.	error

423 of 1062 action table entries left after compaction
488 goto table entries
