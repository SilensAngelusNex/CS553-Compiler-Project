12 shift/reduce conflicts

error:  state 55: shift/reduce conflict (shift OR, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift AND, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift GE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift GT, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift LE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift LT, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift NEQ, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift EQ, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift DIVIDE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift TIMES, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift MINUS, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift PLUS, reduce by rule 37)

state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 150
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 1:

	exp : assignExp .  (reduce by rule 20)



	.	reduce by rule 20


state 2:

	exp : callExp .  (reduce by rule 19)



	.	reduce by rule 19


state 3:

	exp : recCreate .  (reduce by rule 21)



	.	reduce by rule 21


state 4:

	exp : arrCreate .  (reduce by rule 22)



	.	reduce by rule 22


state 5:

	exp : letExp .  (reduce by rule 15)



	.	reduce by rule 15


state 6:

	exp : forExp .  (reduce by rule 16)



	.	reduce by rule 16


state 7:

	exp : whileExp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : ifExp .  (reduce by rule 14)



	.	reduce by rule 14


state 9:

	exp : lvalue .  (reduce by rule 27)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	arrCreate : lvalue . OF exp 
	assignExp : lvalue . ASSIGN exp 

	LBRACK	shift 26
	DOT	shift 25
	ASSIGN	shift 24
	OF	shift 23


	.	reduce by rule 27


state 10:

	exp : seqExp .  (reduce by rule 18)



	.	reduce by rule 18


state 11:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 25)



	.	reduce by rule 25


state 13:

	exp : BREAK .  (reduce by rule 26)



	.	reduce by rule 26


state 14:

	letExp : LET . dec IN seqExp END 

	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 42
	varDec	goto 41
	funcDec	goto 40
	typeDec	goto 39

	.	error


state 15:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 46


	.	error


state 16:

	whileExp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 47
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 17:

	ifExp : IF . exp THEN exp 
	ifExp : IF . exp THEN exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 48
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 18:

	exp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 19:

	seqExp : LPAREN . exp sequence 
	seqExp : LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 51
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 50
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 20:

	exp : STRING .  (reduce by rule 24)



	.	reduce by rule 24


state 21:

	exp : INT .  (reduce by rule 23)



	.	reduce by rule 23


state 22:

	lvalue : ID .  (reduce by rule 64)
	recCreate : ID . LBRACE ID EQ exp fields 
	recCreate : ID . LBRACE RBRACE 
	callExp : ID . LPAREN exp params 
	callExp : ID . LPAREN RPAREN 

	LPAREN	shift 53
	LBRACE	shift 52


	.	reduce by rule 64


state 23:

	arrCreate : lvalue OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 54
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 24:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 55
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 25:

	lvalue : lvalue DOT . ID 

	ID	shift 56


	.	error


state 26:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 57
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 27:

	exp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 58
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 28:

	exp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 59
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 29:

	exp : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 60
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 30:

	exp : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 61
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 31:

	exp : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 32:

	exp : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 33:

	exp : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 34:

	exp : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 35:

	exp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 36:

	exp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 37:

	exp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 68
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 38:

	exp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 69
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 39:

	dec : typeDec . dec 

	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 70
	varDec	goto 41
	funcDec	goto 40
	typeDec	goto 39

	.	error


state 40:

	dec : funcDec . dec 

	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 71
	varDec	goto 41
	funcDec	goto 40
	typeDec	goto 39

	.	error


state 41:

	dec : varDec . dec 

	FUNCTION	shift 45
	VAR	shift 44
	TYPE	shift 43

	dec	goto 72
	varDec	goto 41
	funcDec	goto 40
	typeDec	goto 39

	.	error


state 42:

	letExp : LET dec . IN seqExp END 

	IN	shift 73


	.	error


state 43:

	typeDec : TYPE . ID EQ ty 

	ID	shift 74


	.	error


state 44:

	varDec : VAR . ID ASSIGN exp 
	varDec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 75


	.	error


state 45:

	funcDec : FUNCTION . ID LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 76


	.	error


state 46:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 77


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 78


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp . THEN exp 
	ifExp : IF exp . THEN exp ELSE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 79


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : MINUS exp .  (reduce by rule 13)



	.	reduce by rule 13


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	seqExp : LPAREN exp . sequence 

	SEMICOLON	shift 82
	RPAREN	shift 81
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	sequence	goto 80

	.	error


state 51:

	seqExp : LPAREN RPAREN .  (reduce by rule 39)



	.	reduce by rule 39


state 52:

	recCreate : ID LBRACE . ID EQ exp fields 
	recCreate : ID LBRACE . RBRACE 

	ID	shift 84
	RBRACE	shift 83


	.	error


state 53:

	callExp : ID LPAREN . exp params 
	callExp : ID LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 86
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 85
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	arrCreate : lvalue OF exp .  (reduce by rule 42)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 42

error:  state 55: shift/reduce conflict (shift OR, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift AND, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift GE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift GT, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift LE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift LT, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift NEQ, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift EQ, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift DIVIDE, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift TIMES, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift MINUS, reduce by rule 37)
error:  state 55: shift/reduce conflict (shift PLUS, reduce by rule 37)

state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 37)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 37


state 56:

	lvalue : lvalue DOT ID .  (reduce by rule 63)



	.	reduce by rule 63


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 87
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 12)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28


	.	reduce by rule 12


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 11)
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 11


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 8)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 8


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 7)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 7


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 10)
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 10


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 9)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 9


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 6)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 6


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 5)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 5


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 3)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 3


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 4)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 4


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 2)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 2


state 69:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 1)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 1


state 70:

	dec : typeDec dec .  (reduce by rule 49)



	.	reduce by rule 49


state 71:

	dec : funcDec dec .  (reduce by rule 48)



	.	reduce by rule 48


state 72:

	dec : varDec dec .  (reduce by rule 47)



	.	reduce by rule 47


state 73:

	letExp : LET dec IN . seqExp END 

	LPAREN	shift 19

	seqExp	goto 88

	.	error


state 74:

	typeDec : TYPE ID . EQ ty 

	EQ	shift 89


	.	error


state 75:

	varDec : VAR ID . ASSIGN exp 
	varDec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 91
	ASSIGN	shift 90


	.	error


state 76:

	funcDec : FUNCTION ID . LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 92


	.	error


state 77:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 93
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 78:

	whileExp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 94
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 79:

	ifExp : IF exp THEN . exp 
	ifExp : IF exp THEN . exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 95
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 80:

	seqExp : LPAREN exp sequence .  (reduce by rule 38)



	.	reduce by rule 38


state 81:

	sequence : RPAREN .  (reduce by rule 41)



	.	reduce by rule 41


state 82:

	sequence : SEMICOLON . exp sequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 96
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 83:

	recCreate : ID LBRACE RBRACE .  (reduce by rule 44)



	.	reduce by rule 44


state 84:

	recCreate : ID LBRACE ID . EQ exp fields 

	EQ	shift 97


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	callExp : ID LPAREN exp . params 

	COMMA	shift 100
	RPAREN	shift 99
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	params	goto 98

	.	error


state 86:

	callExp : ID LPAREN RPAREN .  (reduce by rule 34)



	.	reduce by rule 34


state 87:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 62)



	.	reduce by rule 62


state 88:

	letExp : LET dec IN seqExp . END 

	END	shift 101


	.	error


state 89:

	typeDec : TYPE ID EQ . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 102

	.	error


state 90:

	varDec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 106
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 91:

	varDec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 107


	.	error


state 92:

	funcDec : FUNCTION ID LPAREN . argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . argDef RPAREN EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 110
	RPAREN	shift 109

	argDef	goto 108

	.	error


state 93:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 111


	.	error


state 94:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 31)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 31


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp .  (reduce by rule 28)
	ifExp : IF exp THEN exp . ELSE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 112


	.	reduce by rule 28


state 96:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	sequence : SEMICOLON exp . sequence 

	SEMICOLON	shift 82
	RPAREN	shift 81
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	sequence	goto 113

	.	error


state 97:

	recCreate : ID LBRACE ID EQ . exp fields 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 114
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 98:

	callExp : ID LPAREN exp params .  (reduce by rule 33)



	.	reduce by rule 33


state 99:

	params : RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 100:

	params : COMMA . exp params 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 115
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 101:

	letExp : LET dec IN seqExp END .  (reduce by rule 30)



	.	reduce by rule 30


state 102:

	typeDec : TYPE ID EQ ty .  (reduce by rule 56)



	.	reduce by rule 56


state 103:

	ty : ARRAY . OF ty 

	OF	shift 116


	.	error


state 104:

	ty : LBRACE . argDef RBRACE 

	ID	shift 110

	argDef	goto 117

	.	error


state 105:

	ty : ID .  (reduce by rule 57)



	.	reduce by rule 57


state 106:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID ASSIGN exp .  (reduce by rule 50)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 50


state 107:

	varDec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 118


	.	error


state 108:

	funcDec : FUNCTION ID LPAREN argDef . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef . RPAREN EQ exp 

	RPAREN	shift 119


	.	error


state 109:

	funcDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 121
	EQ	shift 120


	.	error


state 110:

	argDef : ID . COLON ty COMMA argDef 
	argDef : ID . COLON ty 

	COLON	shift 122


	.	error


state 111:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 123
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 112:

	ifExp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 124
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 113:

	sequence : SEMICOLON exp sequence .  (reduce by rule 40)



	.	reduce by rule 40


state 114:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recCreate : ID LBRACE ID EQ exp . fields 

	COMMA	shift 127
	RBRACE	shift 126
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	fields	goto 125

	.	error


state 115:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	params : COMMA exp . params 

	COMMA	shift 100
	RPAREN	shift 99
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27

	params	goto 128

	.	error


state 116:

	ty : ARRAY OF . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 129

	.	error


state 117:

	ty : LBRACE argDef . RBRACE 

	RBRACE	shift 130


	.	error


state 118:

	varDec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 131
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 119:

	funcDec : FUNCTION ID LPAREN argDef RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef RPAREN . EQ exp 

	COLON	shift 133
	EQ	shift 132


	.	error


state 120:

	funcDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 134
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 121:

	funcDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 135


	.	error


state 122:

	argDef : ID COLON . ty COMMA argDef 
	argDef : ID COLON . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 136

	.	error


state 123:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 137


	.	error


state 124:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp ELSE exp .  (reduce by rule 29)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 29


state 125:

	recCreate : ID LBRACE ID EQ exp fields .  (reduce by rule 43)



	.	reduce by rule 43


state 126:

	fields : RBRACE .  (reduce by rule 46)



	.	reduce by rule 46


state 127:

	fields : COMMA . ID EQ exp 

	ID	shift 138


	.	error


state 128:

	params : COMMA exp params .  (reduce by rule 35)



	.	reduce by rule 35


state 129:

	ty : ARRAY OF ty .  (reduce by rule 58)



	.	reduce by rule 58


state 130:

	ty : LBRACE argDef RBRACE .  (reduce by rule 59)



	.	reduce by rule 59


state 131:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 51)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 51


state 132:

	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 139
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 133:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON . ID EQ exp 

	ID	shift 140


	.	error


state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funcDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 55)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 55


state 135:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 141


	.	error


state 136:

	argDef : ID COLON ty . COMMA argDef 
	argDef : ID COLON ty .  (reduce by rule 61)

	COMMA	shift 142


	.	reduce by rule 61


state 137:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 143
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 138:

	fields : COMMA ID . EQ exp 

	EQ	shift 144


	.	error


state 139:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ exp .  (reduce by rule 54)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 54


state 140:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID . EQ exp 

	EQ	shift 145


	.	error


state 141:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 146
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 142:

	argDef : ID COLON ty COMMA . argDef 

	ID	shift 110

	argDef	goto 147

	.	error


state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 32)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 32


state 144:

	fields : COMMA ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 148
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 145:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 149
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 146:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 53)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 53


state 147:

	argDef : ID COLON ty COMMA argDef .  (reduce by rule 60)



	.	reduce by rule 60


state 148:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fields : COMMA ID EQ exp .  (reduce by rule 45)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 45


state 149:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ exp .  (reduce by rule 52)

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 52


state 150:


	EOF	accept


	.	error

401 of 970 action table entries left after compaction
436 goto table entries
