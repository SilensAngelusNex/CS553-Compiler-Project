
state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 11
	program	goto 102
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 1:

	term : lvalue .  (reduce by rule 42)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 

	LBRACK	shift 24
	DOT	shift 23


	.	reduce by rule 42


state 2:

	parenExp : term .  (reduce by rule 32)



	.	reduce by rule 32


state 3:

	multExp : parenExp . DIVIDE multExp 
	multExp : parenExp . TIMES multExp 
	multExp : parenExp .  (reduce by rule 30)

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 30


state 4:

	addExp : multExp . PLUS addExp 
	addExp : multExp . MINUS addExp 
	addExp : multExp .  (reduce by rule 27)

	PLUS	shift 28
	MINUS	shift 27


	.	reduce by rule 27


state 5:

	compExp : addExp . comparator addExp 
	compExp : addExp .  (reduce by rule 24)

	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30

	comparator	goto 29

	.	reduce by rule 24


state 6:

	boolExp : compExp . AND boolExp 
	boolExp : compExp . OR boolExp 
	boolExp : compExp .  (reduce by rule 22)

	AND	shift 37
	OR	shift 36


	.	reduce by rule 22


state 7:

	exp : boolExp .  (reduce by rule 1)



	.	reduce by rule 1


state 8:

	dec : funcDec .  (reduce by rule 8)



	.	reduce by rule 8


state 9:

	dec : varDec .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	exp : dec .  (reduce by rule 6)



	.	reduce by rule 6


state 11:

	program : exp .  (reduce by rule 0)



	.	reduce by rule 0


state 12:

	varDec : VAR . ID ASSIGN exp 
	varDec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 38


	.	error


state 13:

	funcDec : FUNCTION . ID LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION . ID LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 39


	.	error


state 14:

	term : BREAK .  (reduce by rule 44)



	.	reduce by rule 44


state 15:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 16:

	exp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 41
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 17:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 42
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 18:

	term : MINUS . INT 

	INT	shift 43


	.	error


state 19:

	parenExp : LPAREN . exp RPAREN 
	term : LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 45
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 44
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 20:

	term : STRING .  (reduce by rule 41)



	.	reduce by rule 41


state 21:

	term : INT .  (reduce by rule 39)



	.	reduce by rule 39


state 22:

	lvalue : ID .  (reduce by rule 47)



	.	reduce by rule 47


state 23:

	lvalue : lvalue DOT . ID 

	ID	shift 46


	.	error


state 24:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 47
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 25:

	multExp : parenExp DIVIDE . multExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	multExp	goto 48
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 26:

	multExp : parenExp TIMES . multExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	multExp	goto 49
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 27:

	addExp : multExp MINUS . addExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	addExp	goto 50
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 28:

	addExp : multExp PLUS . addExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	addExp	goto 51
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 29:

	compExp : addExp comparator . addExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	addExp	goto 52
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 30:

	comparator : GE .  (reduce by rule 38)



	.	reduce by rule 38


state 31:

	comparator : GT .  (reduce by rule 37)



	.	reduce by rule 37


state 32:

	comparator : LE .  (reduce by rule 36)



	.	reduce by rule 36


state 33:

	comparator : LT .  (reduce by rule 35)



	.	reduce by rule 35


state 34:

	comparator : NEQ .  (reduce by rule 34)



	.	reduce by rule 34


state 35:

	comparator : EQ .  (reduce by rule 33)



	.	reduce by rule 33


state 36:

	boolExp : compExp OR . boolExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	boolExp	goto 53
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 37:

	boolExp : compExp AND . boolExp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	BREAK	shift 14

	boolExp	goto 54
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 38:

	varDec : VAR ID . ASSIGN exp 
	varDec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 56
	ASSIGN	shift 55


	.	error


state 39:

	funcDec : FUNCTION ID . LPAREN argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID . LPAREN argDef RPAREN EQ exp 
	funcDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 57


	.	error


state 40:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 58


	.	error


state 41:

	exp : WHILE exp . DO exp 

	DO	shift 59


	.	error


state 42:

	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 

	THEN	shift 60


	.	error


state 43:

	term : MINUS INT .  (reduce by rule 40)



	.	reduce by rule 40


state 44:

	parenExp : LPAREN exp . RPAREN 

	RPAREN	shift 61


	.	error


state 45:

	term : LPAREN RPAREN .  (reduce by rule 43)



	.	reduce by rule 43


state 46:

	lvalue : lvalue DOT ID .  (reduce by rule 46)



	.	reduce by rule 46


state 47:

	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 62


	.	error


state 48:

	multExp : parenExp DIVIDE multExp .  (reduce by rule 28)



	.	reduce by rule 28


state 49:

	multExp : parenExp TIMES multExp .  (reduce by rule 29)



	.	reduce by rule 29


state 50:

	addExp : multExp MINUS addExp .  (reduce by rule 26)



	.	reduce by rule 26


state 51:

	addExp : multExp PLUS addExp .  (reduce by rule 25)



	.	reduce by rule 25


state 52:

	compExp : addExp comparator addExp .  (reduce by rule 23)



	.	reduce by rule 23


state 53:

	boolExp : compExp OR boolExp .  (reduce by rule 21)



	.	reduce by rule 21


state 54:

	boolExp : compExp AND boolExp .  (reduce by rule 20)



	.	reduce by rule 20


state 55:

	varDec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 63
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 56:

	varDec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 64


	.	error


state 57:

	funcDec : FUNCTION ID LPAREN . argDef RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN . argDef RPAREN EQ exp 
	funcDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 67
	RPAREN	shift 66

	argDef	goto 65

	.	error


state 58:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 68
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 59:

	exp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 69
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 60:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 70
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 61:

	parenExp : LPAREN exp RPAREN .  (reduce by rule 31)



	.	reduce by rule 31


state 62:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 45)



	.	reduce by rule 45


state 63:

	varDec : VAR ID ASSIGN exp .  (reduce by rule 9)



	.	reduce by rule 9


state 64:

	varDec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 71


	.	error


state 65:

	funcDec : FUNCTION ID LPAREN argDef . RPAREN COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef . RPAREN EQ exp 

	RPAREN	shift 72


	.	error


state 66:

	funcDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 74
	EQ	shift 73


	.	error


state 67:

	argDef : ID . COLON typeDef COMMA argDef 
	argDef : ID . COLON typeDef 

	COLON	shift 75


	.	error


state 68:

	exp : FOR ID ASSIGN exp . TO exp DO exp 

	TO	shift 76


	.	error


state 69:

	exp : WHILE exp DO exp .  (reduce by rule 4)



	.	reduce by rule 4


state 70:

	exp : IF exp THEN exp .  (reduce by rule 2)
	exp : IF exp THEN exp . ELSE exp 

	ELSE	shift 77


	.	reduce by rule 2


state 71:

	varDec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 78
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 72:

	funcDec : FUNCTION ID LPAREN argDef RPAREN . COLON ID EQ exp 
	funcDec : FUNCTION ID LPAREN argDef RPAREN . EQ exp 

	COLON	shift 80
	EQ	shift 79


	.	error


state 73:

	funcDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 81
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 74:

	funcDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 82


	.	error


state 75:

	argDef : ID COLON . typeDef COMMA argDef 
	argDef : ID COLON . typeDef 

	ID	shift 85
	LBRACE	shift 84

	typeDef	goto 83

	.	error


state 76:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 86
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 77:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 87
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 78:

	varDec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 10)



	.	reduce by rule 10


state 79:

	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 88
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 80:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON . ID EQ exp 

	ID	shift 89


	.	error


state 81:

	funcDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 14)



	.	reduce by rule 14


state 82:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 90


	.	error


state 83:

	argDef : ID COLON typeDef . COMMA argDef 
	argDef : ID COLON typeDef .  (reduce by rule 19)

	COMMA	shift 91


	.	reduce by rule 19


state 84:

	typeDef : LBRACE . argDef RBRACE 

	ID	shift 67

	argDef	goto 92

	.	error


state 85:

	typeDef : ID . OF typeDef 
	typeDef : ID .  (reduce by rule 17)

	OF	shift 93


	.	reduce by rule 17


state 86:

	exp : FOR ID ASSIGN exp TO exp . DO exp 

	DO	shift 94


	.	error


state 87:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 3)



	.	reduce by rule 3


state 88:

	funcDec : FUNCTION ID LPAREN argDef RPAREN EQ exp .  (reduce by rule 13)



	.	reduce by rule 13


state 89:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID . EQ exp 

	EQ	shift 95


	.	error


state 90:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 96
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 91:

	argDef : ID COLON typeDef COMMA . argDef 

	ID	shift 67

	argDef	goto 97

	.	error


state 92:

	typeDef : LBRACE argDef . RBRACE 

	RBRACE	shift 98


	.	error


state 93:

	typeDef : ID OF . typeDef 

	ID	shift 85
	LBRACE	shift 84

	typeDef	goto 99

	.	error


state 94:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 100
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 95:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	BREAK	shift 14
	FUNCTION	shift 13
	VAR	shift 12

	exp	goto 101
	dec	goto 10
	varDec	goto 9
	funcDec	goto 8
	boolExp	goto 7
	compExp	goto 6
	addExp	goto 5
	multExp	goto 4
	parenExp	goto 3
	term	goto 2
	lvalue	goto 1

	.	error


state 96:

	funcDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 12)



	.	reduce by rule 12


state 97:

	argDef : ID COLON typeDef COMMA argDef .  (reduce by rule 18)



	.	reduce by rule 18


state 98:

	typeDef : LBRACE argDef RBRACE .  (reduce by rule 15)



	.	reduce by rule 15


state 99:

	typeDef : ID OF typeDef .  (reduce by rule 16)



	.	reduce by rule 16


state 100:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 5)



	.	reduce by rule 5


state 101:

	funcDec : FUNCTION ID LPAREN argDef RPAREN COLON ID EQ exp .  (reduce by rule 11)



	.	reduce by rule 11


state 102:


	EOF	accept


	.	error

80 of 387 action table entries left after compaction
231 goto table entries
