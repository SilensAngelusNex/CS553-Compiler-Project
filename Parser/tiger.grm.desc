
state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 186
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 1:

	exp : assignExp .  (reduce by rule 22)



	.	reduce by rule 22


state 2:

	exp : callExp .  (reduce by rule 21)



	.	reduce by rule 21


state 3:

	exp : recCreate .  (reduce by rule 23)



	.	reduce by rule 23


state 4:

	exp : arrCreate .  (reduce by rule 24)



	.	reduce by rule 24


state 5:

	exp : letExp .  (reduce by rule 15)



	.	reduce by rule 15


state 6:

	exp : forExp .  (reduce by rule 16)



	.	reduce by rule 16


state 7:

	exp : whileExp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : ifExp .  (reduce by rule 14)



	.	reduce by rule 14


state 9:

	exp : lvalue .  (reduce by rule 29)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	arrCreate : lvalue . LBRACK exp RBRACK OF exp 
	assignExp : lvalue . ASSIGN exp 

	LBRACK	shift 25
	DOT	shift 24
	ASSIGN	shift 23


	.	reduce by rule 29


state 10:

	exp : seqExp .  (reduce by rule 18)



	.	reduce by rule 18


state 11:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 27)



	.	reduce by rule 27


state 13:

	exp : BREAK .  (reduce by rule 28)



	.	reduce by rule 28


state 14:

	letExp : LET . dec letSequence 

	IN	shift 47
	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	dec	goto 43
	typDecs	goto 42
	funDecs	goto 41
	varDec	goto 40
	funDec	goto 39
	typeDec	goto 38

	.	error


state 15:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 48


	.	error


state 16:

	whileExp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 17:

	ifExp : IF . exp THEN exp 
	ifExp : IF . exp THEN exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 50
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 18:

	exp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 51
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 19:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	seqExp : LPAREN . exp SEMICOLON exp sequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 53
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 52
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 20:

	exp : STRING .  (reduce by rule 26)



	.	reduce by rule 26


state 21:

	exp : INT .  (reduce by rule 25)



	.	reduce by rule 25


state 22:

	lvalue : ID .  (reduce by rule 83)
	recCreate : ID . LBRACE ID EQ exp fields 
	recCreate : ID . LBRACE RBRACE 
	callExp : ID . LPAREN exp params 
	callExp : ID . LPAREN RPAREN 

	LPAREN	shift 55
	LBRACE	shift 54


	.	reduce by rule 83


state 23:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 56
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 24:

	lvalue : lvalue DOT . ID 

	ID	shift 57


	.	error


state 25:

	lvalue : lvalue LBRACK . exp RBRACK 
	arrCreate : lvalue LBRACK . exp RBRACK OF exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 58
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 26:

	exp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 59
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 27:

	exp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 60
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 28:

	exp : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 61
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 29:

	exp : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 30:

	exp : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 31:

	exp : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 32:

	exp : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 33:

	exp : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 34:

	exp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 35:

	exp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 68
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 36:

	exp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 69
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 37:

	exp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 70
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 38:

	typDecs : typeDec . typDecs 
	typDecs : typeDec .  (reduce by rule 65)

	TYPE	shift 44

	typDecs	goto 71
	typeDec	goto 38

	.	reduce by rule 65


state 39:

	funDecs : funDec . funDecs 
	funDecs : funDec .  (reduce by rule 63)

	FUNCTION	shift 46

	funDecs	goto 72
	funDec	goto 39

	.	reduce by rule 63


state 40:

	dec : varDec . dec 

	IN	shift 47
	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	dec	goto 73
	typDecs	goto 42
	funDecs	goto 41
	varDec	goto 40
	funDec	goto 39
	typeDec	goto 38

	.	error


state 41:

	dec : funDecs . dec2 

	IN	shift 77
	VAR	shift 45
	TYPE	shift 44

	dec2	goto 76
	typDecs	goto 75
	varDec	goto 74
	typeDec	goto 38

	.	error


state 42:

	dec : typDecs . dec3 

	IN	shift 81
	FUNCTION	shift 46
	VAR	shift 45

	dec3	goto 80
	funDecs	goto 79
	varDec	goto 78
	funDec	goto 39

	.	error


state 43:

	letExp : LET dec . letSequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	END	shift 84
	BREAK	shift 13
	NIL	shift 12

	exp	goto 83
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1
	letSequence	goto 82

	.	error


state 44:

	typeDec : TYPE . ID EQ ty 

	ID	shift 85


	.	error


state 45:

	varDec : VAR . ID ASSIGN exp 
	varDec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 86


	.	error


state 46:

	funDec : FUNCTION . ID LPAREN ID COLON ID argDefFun COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION . ID LPAREN ID COLON ID argDefFun EQ exp 
	funDec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 87


	.	error


state 47:

	dec : IN .  (reduce by rule 55)



	.	reduce by rule 55


state 48:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 88


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	DO	shift 89


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp . THEN exp 
	ifExp : IF exp . THEN exp ELSE exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	THEN	shift 90


	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : MINUS exp .  (reduce by rule 13)



	.	reduce by rule 13


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : LPAREN exp . RPAREN 
	seqExp : LPAREN exp . SEMICOLON exp sequence 

	SEMICOLON	shift 92
	RPAREN	shift 91
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	error


state 53:

	exp : LPAREN RPAREN .  (reduce by rule 20)



	.	reduce by rule 20


state 54:

	recCreate : ID LBRACE . ID EQ exp fields 
	recCreate : ID LBRACE . RBRACE 

	ID	shift 94
	RBRACE	shift 93


	.	error


state 55:

	callExp : ID LPAREN . exp params 
	callExp : ID LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 96
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 95
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 39)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 39


state 57:

	lvalue : lvalue DOT ID .  (reduce by rule 82)



	.	reduce by rule 82


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 
	arrCreate : lvalue LBRACK exp . RBRACK OF exp 

	RBRACK	shift 97
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 12)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27


	.	reduce by rule 12


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 11)
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28


	.	reduce by rule 11


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 8)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 8


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 7)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 7


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 10)
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 10


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 9)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 9


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 6)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 6


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 5)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 5


state 67:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 3)
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 3


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 4)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 4


state 69:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 2)
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 2


state 70:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 1)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 35
	DIVIDE	shift 34


	.	reduce by rule 1


state 71:

	typDecs : typeDec typDecs .  (reduce by rule 64)



	.	reduce by rule 64


state 72:

	funDecs : funDec funDecs .  (reduce by rule 62)



	.	reduce by rule 62


state 73:

	dec : varDec dec .  (reduce by rule 52)



	.	reduce by rule 52


state 74:

	dec2 : varDec . dec 

	IN	shift 47
	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	dec	goto 98
	typDecs	goto 42
	funDecs	goto 41
	varDec	goto 40
	funDec	goto 39
	typeDec	goto 38

	.	error


state 75:

	dec2 : typDecs . dec3 

	IN	shift 81
	FUNCTION	shift 46
	VAR	shift 45

	dec3	goto 99
	funDecs	goto 79
	varDec	goto 78
	funDec	goto 39

	.	error


state 76:

	dec : funDecs dec2 .  (reduce by rule 53)



	.	reduce by rule 53


state 77:

	dec2 : IN .  (reduce by rule 58)



	.	reduce by rule 58


state 78:

	dec3 : varDec . dec 

	IN	shift 47
	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	dec	goto 100
	typDecs	goto 42
	funDecs	goto 41
	varDec	goto 40
	funDec	goto 39
	typeDec	goto 38

	.	error


state 79:

	dec3 : funDecs . dec2 

	IN	shift 77
	VAR	shift 45
	TYPE	shift 44

	dec2	goto 101
	typDecs	goto 75
	varDec	goto 74
	typeDec	goto 38

	.	error


state 80:

	dec : typDecs dec3 .  (reduce by rule 54)



	.	reduce by rule 54


state 81:

	dec3 : IN .  (reduce by rule 61)



	.	reduce by rule 61


state 82:

	letExp : LET dec letSequence .  (reduce by rule 32)



	.	reduce by rule 32


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	letSequence : exp . letTail 

	SEMICOLON	shift 104
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	END	shift 103

	letTail	goto 102

	.	error


state 84:

	letSequence : END .  (reduce by rule 44)



	.	reduce by rule 44


state 85:

	typeDec : TYPE ID . EQ ty 

	EQ	shift 105


	.	error


state 86:

	varDec : VAR ID . ASSIGN exp 
	varDec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 107
	ASSIGN	shift 106


	.	error


state 87:

	funDec : FUNCTION ID . LPAREN ID COLON ID argDefFun COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID . LPAREN ID COLON ID argDefFun EQ exp 
	funDec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 108


	.	error


state 88:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 109
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 89:

	whileExp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 110
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 90:

	ifExp : IF exp THEN . exp 
	ifExp : IF exp THEN . exp ELSE exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 111
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 91:

	exp : LPAREN exp RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 92:

	seqExp : LPAREN exp SEMICOLON . exp sequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 112
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 93:

	recCreate : ID LBRACE RBRACE .  (reduce by rule 49)



	.	reduce by rule 49


state 94:

	recCreate : ID LBRACE ID . EQ exp fields 

	EQ	shift 113


	.	error


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	callExp : ID LPAREN exp . params 

	COMMA	shift 116
	RPAREN	shift 115
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	params	goto 114

	.	error


state 96:

	callExp : ID LPAREN RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 97:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 81)
	arrCreate : lvalue LBRACK exp RBRACK . OF exp 

	OF	shift 117


	.	reduce by rule 81


state 98:

	dec2 : varDec dec .  (reduce by rule 56)



	.	reduce by rule 56


state 99:

	dec2 : typDecs dec3 .  (reduce by rule 57)



	.	reduce by rule 57


state 100:

	dec3 : varDec dec .  (reduce by rule 59)



	.	reduce by rule 59


state 101:

	dec3 : funDecs dec2 .  (reduce by rule 60)



	.	reduce by rule 60


state 102:

	letSequence : exp letTail .  (reduce by rule 43)



	.	reduce by rule 43


state 103:

	letTail : END .  (reduce by rule 46)



	.	reduce by rule 46


state 104:

	letTail : SEMICOLON . exp letTail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 118
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 105:

	typeDec : TYPE ID EQ . ty 

	ID	shift 122
	LBRACE	shift 121
	ARRAY	shift 120

	ty	goto 119

	.	error


state 106:

	varDec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 123
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 107:

	varDec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 124


	.	error


state 108:

	funDec : FUNCTION ID LPAREN . ID COLON ID argDefFun COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN . ID COLON ID argDefFun EQ exp 
	funDec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 126
	RPAREN	shift 125


	.	error


state 109:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	TO	shift 127


	.	error


state 110:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 33)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 33


state 111:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp .  (reduce by rule 30)
	ifExp : IF exp THEN exp . ELSE exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	ELSE	shift 128


	.	reduce by rule 30


state 112:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	seqExp : LPAREN exp SEMICOLON exp . sequence 

	SEMICOLON	shift 131
	RPAREN	shift 130
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	sequence	goto 129

	.	error


state 113:

	recCreate : ID LBRACE ID EQ . exp fields 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 132
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 114:

	callExp : ID LPAREN exp params .  (reduce by rule 35)



	.	reduce by rule 35


state 115:

	params : RPAREN .  (reduce by rule 38)



	.	reduce by rule 38


state 116:

	params : COMMA . exp params 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 133
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 117:

	arrCreate : lvalue LBRACK exp RBRACK OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 134
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 118:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	letTail : SEMICOLON exp . letTail 

	SEMICOLON	shift 104
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	END	shift 103

	letTail	goto 135

	.	error


state 119:

	typeDec : TYPE ID EQ ty .  (reduce by rule 72)



	.	reduce by rule 72


state 120:

	ty : ARRAY . OF ID 

	OF	shift 136


	.	error


state 121:

	ty : LBRACE . ID COLON ID argDef 
	ty : LBRACE . RBRACE 

	ID	shift 138
	RBRACE	shift 137


	.	error


state 122:

	ty : ID .  (reduce by rule 73)



	.	reduce by rule 73


state 123:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID ASSIGN exp .  (reduce by rule 66)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 66


state 124:

	varDec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 139


	.	error


state 125:

	funDec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 141
	EQ	shift 140


	.	error


state 126:

	funDec : FUNCTION ID LPAREN ID . COLON ID argDefFun COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID . COLON ID argDefFun EQ exp 

	COLON	shift 142


	.	error


state 127:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 143
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 128:

	ifExp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 144
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 129:

	seqExp : LPAREN exp SEMICOLON exp sequence .  (reduce by rule 40)



	.	reduce by rule 40


state 130:

	sequence : RPAREN .  (reduce by rule 42)



	.	reduce by rule 42


state 131:

	sequence : SEMICOLON . exp sequence 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 145
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 132:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recCreate : ID LBRACE ID EQ exp . fields 

	COMMA	shift 148
	RBRACE	shift 147
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	fields	goto 146

	.	error


state 133:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	params : COMMA exp . params 

	COMMA	shift 116
	RPAREN	shift 115
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	params	goto 149

	.	error


state 134:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	arrCreate : lvalue LBRACK exp RBRACK OF exp .  (reduce by rule 47)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 47


state 135:

	letTail : SEMICOLON exp letTail .  (reduce by rule 45)



	.	reduce by rule 45


state 136:

	ty : ARRAY OF . ID 

	ID	shift 150


	.	error


state 137:

	ty : LBRACE RBRACE .  (reduce by rule 76)



	.	reduce by rule 76


state 138:

	ty : LBRACE ID . COLON ID argDef 

	COLON	shift 151


	.	error


state 139:

	varDec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 152
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 140:

	funDec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 153
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 141:

	funDec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 154


	.	error


state 142:

	funDec : FUNCTION ID LPAREN ID COLON . ID argDefFun COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON . ID argDefFun EQ exp 

	ID	shift 155


	.	error


state 143:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26
	DO	shift 156


	.	error


state 144:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	ifExp : IF exp THEN exp ELSE exp .  (reduce by rule 31)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 31


state 145:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	sequence : SEMICOLON exp . sequence 

	SEMICOLON	shift 131
	RPAREN	shift 130
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	sequence	goto 157

	.	error


state 146:

	recCreate : ID LBRACE ID EQ exp fields .  (reduce by rule 48)



	.	reduce by rule 48


state 147:

	fields : RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 148:

	fields : COMMA . ID EQ exp fields 

	ID	shift 158


	.	error


state 149:

	params : COMMA exp params .  (reduce by rule 37)



	.	reduce by rule 37


state 150:

	ty : ARRAY OF ID .  (reduce by rule 74)



	.	reduce by rule 74


state 151:

	ty : LBRACE ID COLON . ID argDef 

	ID	shift 159


	.	error


state 152:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	varDec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 67)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 67


state 153:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 71)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 71


state 154:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 160


	.	error


state 155:

	funDec : FUNCTION ID LPAREN ID COLON ID . argDefFun COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON ID . argDefFun EQ exp 

	COMMA	shift 163
	RPAREN	shift 162

	argDefFun	goto 161

	.	error


state 156:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 164
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 157:

	sequence : SEMICOLON exp sequence .  (reduce by rule 41)



	.	reduce by rule 41


state 158:

	fields : COMMA ID . EQ exp fields 

	EQ	shift 165


	.	error


state 159:

	ty : LBRACE ID COLON ID . argDef 

	COMMA	shift 168
	RBRACE	shift 167

	argDef	goto 166

	.	error


state 160:

	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 169
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 161:

	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun . COLON ID EQ exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun . EQ exp 

	COLON	shift 171
	EQ	shift 170


	.	error


state 162:

	argDefFun : RPAREN .  (reduce by rule 80)



	.	reduce by rule 80


state 163:

	argDefFun : COMMA . ID COLON ID argDefFun 

	ID	shift 172


	.	error


state 164:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 34)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 34


state 165:

	fields : COMMA ID EQ . exp fields 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 173
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 166:

	ty : LBRACE ID COLON ID argDef .  (reduce by rule 75)



	.	reduce by rule 75


state 167:

	argDef : RBRACE .  (reduce by rule 78)



	.	reduce by rule 78


state 168:

	argDef : COMMA . ID COLON ID argDef 

	ID	shift 174


	.	error


state 169:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 69)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 69


state 170:

	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 175
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 171:

	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun COLON . ID EQ exp 

	ID	shift 176


	.	error


state 172:

	argDefFun : COMMA ID . COLON ID argDefFun 

	COLON	shift 177


	.	error


state 173:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fields : COMMA ID EQ exp . fields 

	COMMA	shift 148
	RBRACE	shift 147
	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26

	fields	goto 178

	.	error


state 174:

	argDef : COMMA ID . COLON ID argDef 

	COLON	shift 179


	.	error


state 175:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun EQ exp .  (reduce by rule 70)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 70


state 176:

	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun COLON ID . EQ exp 

	EQ	shift 180


	.	error


state 177:

	argDefFun : COMMA ID COLON . ID argDefFun 

	ID	shift 181


	.	error


state 178:

	fields : COMMA ID EQ exp fields .  (reduce by rule 50)



	.	reduce by rule 50


state 179:

	argDef : COMMA ID COLON . ID argDef 

	ID	shift 182


	.	error


state 180:

	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 183
	seqExp	goto 10
	lvalue	goto 9
	ifExp	goto 8
	whileExp	goto 7
	forExp	goto 6
	letExp	goto 5
	arrCreate	goto 4
	recCreate	goto 3
	callExp	goto 2
	assignExp	goto 1

	.	error


state 181:

	argDefFun : COMMA ID COLON ID . argDefFun 

	COMMA	shift 163
	RPAREN	shift 162

	argDefFun	goto 184

	.	error


state 182:

	argDef : COMMA ID COLON ID . argDef 

	COMMA	shift 168
	RBRACE	shift 167

	argDef	goto 185

	.	error


state 183:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . TIMES exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funDec : FUNCTION ID LPAREN ID COLON ID argDefFun COLON ID EQ exp .  (reduce by rule 68)

	PLUS	shift 37
	MINUS	shift 36
	TIMES	shift 35
	DIVIDE	shift 34
	EQ	shift 33
	NEQ	shift 32
	LT	shift 31
	LE	shift 30
	GT	shift 29
	GE	shift 28
	AND	shift 27
	OR	shift 26


	.	reduce by rule 68


state 184:

	argDefFun : COMMA ID COLON ID argDefFun .  (reduce by rule 79)



	.	reduce by rule 79


state 185:

	argDef : COMMA ID COLON ID argDef .  (reduce by rule 77)



	.	reduce by rule 77


state 186:


	EOF	accept


	.	error

455 of 1116 action table entries left after compaction
499 goto table entries
